using System.Collections;using System.Collections.Generic;using UnityEngine;[RequireComponent(typeof(AiAgent))]public class StateMachine : MonoBehaviour{    public enum State    {        Patrol,        Chase,        Flee,        Home,        Fight    }    public State _state;    private AiAgent _aiAgent;    private AiSplit _aiSplit;    public bool justChanged = false;    // Start is called before the first frame update    private void Start()    {        _aiAgent = GetComponent<AiAgent>();        NextState();    }    private void NextState()    {        switch (_state)        {            case State.Patrol:                StartCoroutine(PatrolState());                break;            case State.Chase:                StartCoroutine(ChaseState());                break;            case State.Home:                StartCoroutine(HomeState());                break;            case State.Flee:                StartCoroutine(FleeState());                break;            case State.Fight:                StartCoroutine(FightState());                break;            default:                break;        }    }    private IEnumerator PatrolState()    {        _aiAgent.Search();        while (_state == State.Patrol)        {            _aiAgent.Patrol();            if (_aiAgent.IsPlayerInRange()) _state = State.Chase;            yield return null;        }        NextState();    }    private IEnumerator ChaseState()    {        Debug.Log("Chase: Enter");        while (_state == State.Chase)        {            _aiAgent.ChasePlayer();            if (!_aiAgent.IsPlayerInRange()) _state = State.Patrol;            yield return null;        }        Debug.Log("Chase: Exit");        NextState();    }    private IEnumerator HomeState()    {        //after the ai flees to the home sleeps for 5 seconds before going on patrol again        while (_state == State.Home)        {            _aiAgent.HomeState();            yield return new WaitForSeconds(5);            _state = State.Chase;            //if statement         }    }    private IEnumerator FleeState()    {        //when the player hits an ai they run towards home        while (_state == State.Flee)        {            _aiAgent.FleeState();            //if statement            yield return null;        }    }    private IEnumerator FightState()    {        //after the ai flees to the home sleeps for 5 seconds before going on patrol again        while (_state == State.Fight)        {            _aiAgent.FightState();            //if statement             yield return null;        }    }    private void Update()    {    }}